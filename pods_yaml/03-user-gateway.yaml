apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-gateway
spec:
  replicas: 1 # HPA动态调整
  selector:
    matchLabels:
      app: user-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: user-gateway
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/prometheus/metrics' # Django-Prometheus 暴露指标的路径
        prometheus.io/port: '8000' # 应用监听的端口
    spec:
      containers:
      - name: user-gateway
        image: user_gateway:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DB_HOST
          value: "mysql"
        - name: DB_USER
          value: "user"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_NAME
          value: "mydb"
        - name: REDIS_HOST
          value: "redis"
        - name: DJANGO_SETTINGS_MODULE
          value: "user_gateway.settings"
        # 增强健康检查
        livenessProbe:
          httpGet:
            path: /health/
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready/
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 2
        # 统一资源配置
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "1000m"
            memory: "1Gi"
---
apiVersion: v1
kind: Service
metadata:
  name: user-gateway
spec:
  selector:
    app: user-gateway
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000