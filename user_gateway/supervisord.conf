[supervisord]
;nodaemon=true  # 前台运行（容器环境通常需要，避免容器退出）
logfile=/var/log/supervisor/supervisord.log  # supervisord自身日志
pidfile=/var/run/supervisord.pid
user=root  # 容器内建议用root（避免权限问题）

[program:django_app]
; 关键：使用Gunicorn替代runserver（商业化成熟方案）
command=gunicorn --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 60 user_gateway.wsgi:application

; 项目根目录（与Dockerfile的WORKDIR一致）
directory=/app

; 自动启动和重启策略
autostart=true
autorestart=true
startretries=3  # 启动失败重试次数

; 日志配置（输出到容器日志目录，方便外部收集）
stdout_logfile=/var/log/supervisor/django_stdout.log
stdout_logfile_maxbytes=50MB  # 单文件最大50MB
stdout_logfile_backups=3  # 保留3个备份
stderr_logfile=/var/log/supervisor/django_stderr.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=3

; 进程用户（根据容器用户调整，若容器非root运行可改为其他用户）
user=root

; 环境变量（如Django的DEBUG模式、数据库配置等）
environment=DJANGO_SETTINGS_MODULE="user_gateway.settings", DEBUG="False"


[program:user_gateway_celery_worker]
command=celery -A user_gateway worker -l info
directory=/d/git/mission-django/user_gateway
autostart=true
autorestart=true
startretries=3
stdout_logfile=/var/log/supervisor/user_gateway_celery_worker_stdout.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=3
stderr_logfile=/var/log/supervisor/user_gateway_celery_worker_stderr.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=3
environment=DJANGO_SETTINGS_MODULE="user_gateway.settings"

[program:user_gateway_celery_beat]
command=celery -A user_gateway beat -l info
directory=/d/git/mission-django/user_gateway
autostart=true
autorestart=true
startretries=3
stdout_logfile=/var/log/supervisor/user_gateway_celery_beat_stdout.log
stdout_logfile_maxbytes=50MB
stdout_logfile_backups=3
stderr_logfile=/var/log/supervisor/user_gateway_celery_beat_stderr.log
stderr_logfile_maxbytes=50MB
stderr_logfile_backups=3
environment=DJANGO_SETTINGS_MODULE="user_gateway.settings"