# Generated by Django 4.2.7 on 2025-06-07 14:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Baseedge',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('baseedgename', models.CharField(blank=True, db_column='BaseEdgeName', max_length=50, null=True)),
                ('baseedgedesc', models.CharField(blank=True, db_column='BaseEdgeDesc', max_length=255, null=True)),
                ('geolocation', models.CharField(blank=True, db_column='GeoLocation', max_length=255, null=True)),
                ('nation', models.CharField(blank=True, db_column='Nation', max_length=50, null=True)),
                ('province', models.CharField(blank=True, db_column='Province', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('district', models.CharField(blank=True, db_column='District', max_length=50, null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=50, null=True)),
                ('no', models.CharField(blank=True, db_column='No', max_length=50, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=50, null=True)),
            ],
            options={
                'db_table': 'BaseEdge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Basenode',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('basenodename', models.CharField(blank=True, db_column='BaseNodeName', max_length=50, null=True)),
                ('basenodedesc', models.CharField(blank=True, db_column='BaseNodeDesc', max_length=255, null=True)),
                ('geolocation', models.CharField(blank=True, db_column='GeoLocation', max_length=255, null=True)),
                ('nation', models.CharField(blank=True, db_column='Nation', max_length=50, null=True)),
                ('province', models.CharField(blank=True, db_column='Province', max_length=50, null=True)),
                ('city', models.CharField(blank=True, db_column='City', max_length=50, null=True)),
                ('district', models.CharField(blank=True, db_column='District', max_length=50, null=True)),
                ('street', models.CharField(blank=True, db_column='Street', max_length=50, null=True)),
                ('no', models.CharField(blank=True, db_column='No', max_length=50, null=True)),
                ('location', models.CharField(blank=True, db_column='Location', max_length=50, null=True)),
                ('attribute', models.JSONField(blank=True, db_column='Attribute', null=True)),
                ('cistype', models.CharField(blank=True, db_column='CISType', max_length=3, null=True)),
                ('subtype', models.CharField(blank=True, db_column='SubType', max_length=13, null=True)),
                ('modelname', models.CharField(blank=True, db_column='ModelName', max_length=50, null=True)),
                ('coverage', models.CharField(blank=True, db_column='Coverage', max_length=255, null=True)),
                ('owner', models.CharField(blank=True, db_column='Owner', max_length=50, null=True)),
            ],
            options={
                'db_table': 'BaseNode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Intraedge',
            fields=[
                ('intraedgeid', models.AutoField(db_column='IntraEdgeID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'IntraEdge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Layer',
            fields=[
                ('layerid', models.AutoField(db_column='LayerID', primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=22, null=True)),
            ],
            options={
                'db_table': 'Layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Map',
            fields=[
                ('mapid', models.AutoField(db_column='MapID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MapLayer',
            fields=[
                ('map_layer', models.AutoField(db_column='Map_Layer', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Map_Layer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Mechanismrelationship',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('business', models.TextField(blank=True, db_column='Business', null=True)),
                ('function', models.TextField(blank=True, db_column='Function', null=True)),
                ('composition', models.TextField(blank=True, db_column='Composition', null=True)),
                ('behavior', models.TextField(blank=True, db_column='Behavior', null=True)),
                ('state', models.TextField(blank=True, db_column='State', null=True)),
            ],
            options={
                'db_table': 'MechanismRelationShip',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('nodeid', models.AutoField(db_column='NodeID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Node',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('edgeid', models.OneToOneField(db_column='EdgeID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='resourcedb.baseedge')),
            ],
            options={
                'db_table': 'Edge',
                'managed': False,
            },
        ),
    ]
