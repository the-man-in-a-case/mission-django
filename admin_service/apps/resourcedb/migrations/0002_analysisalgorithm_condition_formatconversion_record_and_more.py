# Generated by Django 5.2.1 on 2025-06-18 16:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('resourcedb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalysisAlgorithm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='分析算法', max_length=50, null=True)),
                ('parameters', models.TextField(blank=True, help_text='分析（公式）参数', null=True)),
            ],
            options={
                'verbose_name': '分析算法',
                'verbose_name_plural': '分析算法',
                'db_table': 'AnalysisAlgorithm',
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Initial', 'Initial'), ('Suspend', 'Suspend'), ('End', 'End')], max_length=10, null=True)),
            ],
            options={
                'verbose_name': '条件',
                'verbose_name_plural': '条件',
                'db_table': 'Conditions',
            },
        ),
        migrations.CreateModel(
            name='FormatConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input_format', models.CharField(blank=True, help_text='输入格式', max_length=50, null=True)),
                ('output_format', models.CharField(blank=True, help_text='输出格式', max_length=50, null=True)),
            ],
            options={
                'verbose_name': '格式转换',
                'verbose_name_plural': '格式转换',
                'db_table': 'FormatConvertion',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_data', models.JSONField(blank=True, help_text='记录的内容', null=True)),
            ],
            options={
                'verbose_name': '记录',
                'verbose_name_plural': '记录',
                'db_table': 'Record',
            },
        ),
        migrations.CreateModel(
            name='Technique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('SELECT', 'Select'), ('Order', 'Order'), ('Random', 'Random')], max_length=10, null=True)),
            ],
            options={
                'verbose_name': '技术',
                'verbose_name_plural': '技术',
                'db_table': 'Technique',
            },
        ),
        migrations.AlterModelOptions(
            name='baseedge',
            options={'verbose_name': '边基类', 'verbose_name_plural': '边基类'},
        ),
        migrations.AlterModelOptions(
            name='basenode',
            options={'verbose_name': '节点基类', 'verbose_name_plural': '节点基类'},
        ),
        migrations.AlterModelOptions(
            name='edge',
            options={'verbose_name': '边', 'verbose_name_plural': '边'},
        ),
        migrations.AlterModelOptions(
            name='intraedge',
            options={'verbose_name': '层内边', 'verbose_name_plural': '层内边'},
        ),
        migrations.AlterModelOptions(
            name='layer',
            options={'verbose_name': '图层', 'verbose_name_plural': '图层'},
        ),
        migrations.AlterModelOptions(
            name='map',
            options={'verbose_name': '地图', 'verbose_name_plural': '地图'},
        ),
        migrations.AlterModelOptions(
            name='maplayer',
            options={'verbose_name': '地图图层映射', 'verbose_name_plural': '地图图层映射'},
        ),
        migrations.AlterModelOptions(
            name='mechanismrelationship',
            options={'verbose_name': '机制关系', 'verbose_name_plural': '机制关系'},
        ),
        migrations.AlterModelOptions(
            name='node',
            options={'verbose_name': '节点', 'verbose_name_plural': '节点'},
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('layer', models.ForeignKey(help_text='图层ID', on_delete=django.db.models.deletion.RESTRICT, related_name='configurations', to='resourcedb.layer')),
            ],
            options={
                'verbose_name': '配置',
                'verbose_name_plural': '配置',
                'db_table': 'Configuration',
            },
        ),
        migrations.CreateModel(
            name='Diagram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', models.ForeignKey(help_text='配置ID', on_delete=django.db.models.deletion.RESTRICT, related_name='diagrams', to='resourcedb.configuration')),
                ('map', models.ForeignKey(help_text='地图ID', on_delete=django.db.models.deletion.RESTRICT, related_name='diagrams', to='resourcedb.map')),
                ('technique', models.ForeignKey(help_text='技术ID', on_delete=django.db.models.deletion.RESTRICT, related_name='diagrams', to='resourcedb.technique')),
            ],
            options={
                'verbose_name': '图表',
                'verbose_name_plural': '图表',
                'db_table': 'Diagram',
            },
        ),
        migrations.CreateModel(
            name='MapVersionSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('from_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='from_snapshots', to='resourcedb.map')),
                ('to_map', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_snapshots', to='resourcedb.map')),
            ],
            options={
                'verbose_name': '地图版本快照',
                'verbose_name_plural': '地图版本快照',
                'db_table': 'MapVersionSnapshot',
            },
        ),
        migrations.CreateModel(
            name='Execution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iteration', models.IntegerField(blank=True, help_text='迭代次数', null=True)),
                ('record', models.ForeignKey(help_text='记录ID', on_delete=django.db.models.deletion.RESTRICT, related_name='executions', to='resourcedb.record')),
            ],
            options={
                'verbose_name': '执行',
                'verbose_name_plural': '执行',
                'db_table': 'Execution',
            },
        ),
        migrations.CreateModel(
            name='ResourceImportJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('import_type', models.CharField(choices=[('MAP', 'Map全量导入'), ('LAYER', 'Layer增量导入')], max_length=10)),
                ('imported_data', models.JSONField(help_text='导入的JSON数据')),
                ('status', models.CharField(choices=[('PENDING', '待处理'), ('SUCCESS', '成功'), ('FAILED', '失败')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('target_layer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='import_jobs', to='resourcedb.layer')),
                ('target_map', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='import_jobs', to='resourcedb.map')),
            ],
            options={
                'verbose_name': '资源导入任务',
                'verbose_name_plural': '资源导入任务',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_algorithm', models.ForeignKey(help_text='分析算法ID', on_delete=django.db.models.deletion.RESTRICT, related_name='results', to='resourcedb.analysisalgorithm')),
                ('format_conversion', models.ForeignKey(help_text='格式转换ID', on_delete=django.db.models.deletion.RESTRICT, related_name='results', to='resourcedb.formatconversion')),
            ],
            options={
                'verbose_name': '结果',
                'verbose_name_plural': '结果',
                'db_table': 'Result',
            },
        ),
        migrations.CreateModel(
            name='Simulation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.ForeignKey(help_text='条件ID', on_delete=django.db.models.deletion.RESTRICT, related_name='simulations', to='resourcedb.condition')),
                ('execution', models.ForeignKey(help_text='执行ID', on_delete=django.db.models.deletion.RESTRICT, related_name='simulations', to='resourcedb.execution')),
                ('result', models.ForeignKey(help_text='结果ID', on_delete=django.db.models.deletion.RESTRICT, related_name='simulations', to='resourcedb.result')),
            ],
            options={
                'verbose_name': '仿真',
                'verbose_name_plural': '仿真',
                'db_table': 'Simulation',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diagram', models.ForeignKey(help_text='图表ID', on_delete=django.db.models.deletion.RESTRICT, related_name='projects', to='resourcedb.diagram')),
                ('simulation', models.ForeignKey(help_text='仿真ID', on_delete=django.db.models.deletion.RESTRICT, related_name='projects', to='resourcedb.simulation')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'Project',
            },
        ),
        migrations.CreateModel(
            name='TargetNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target_sequence', models.IntegerField(blank=True, help_text='执行步序(优先级)', null=True)),
                ('target_effect', models.FloatField(blank=True, help_text='影响效果', null=True)),
                ('node', models.ForeignKey(help_text='目标节点ID', on_delete=django.db.models.deletion.RESTRICT, related_name='target_nodes', to='resourcedb.basenode')),
                ('technique', models.ForeignKey(help_text='技术ID', on_delete=django.db.models.deletion.RESTRICT, related_name='target_nodes', to='resourcedb.technique')),
            ],
            options={
                'verbose_name': '目标节点',
                'verbose_name_plural': '目标节点',
                'db_table': 'TargetNode',
                'unique_together': {('technique', 'node')},
            },
        ),
    ]
